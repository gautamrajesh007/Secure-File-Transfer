package com.projects.security;

import io.github.cdimascio.dotenv.Dotenv;
import org.json.JSONObject;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.Files;

public class MalwareScanner {
    private static final Dotenv env = Dotenv.load();
    private static final String API_KEY = env.get("API_KEY");

    public static boolean scanFile(String filePath) throws Exception {
        Path file = Paths.get(filePath);
        try {
            HttpClient client = HttpClient.newHttpClient();
            // Create multipart request
            HttpRequest requestPOST = HttpRequest.newBuilder()
                .uri(URI.create("https://www.virustotal.com/api/v3/files"))
                .header("x-apikey", API_KEY)
                .header("accept", "application/json")
                .header("Content-Type", "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW")
                .POST(HttpRequest.BodyPublishers.ofString(
                    "------WebKitFormBoundary7MA4YWxkTrZu0gW\r\n" +
                    "Content-Disposition: form-data; name=\"file\"; filename=\"" + file.getFileName() + "\"\r\n" +
                    "Content-Type: application/octet-stream\r\n\r\n" +
                    new String(Files.readAllBytes(file)) + "\r\n" +
                    "------WebKitFormBoundary7MA4YWxkTrZu0gW--"
                ))
                .build();


            HttpResponse<String> responsePOST = client.send(requestPOST, HttpResponse.BodyHandlers.ofString());
            System.out.println("VirusTotal Response: ");
            System.out.println(responsePOST.body());
            System.out.println();

            // Parse JSON Response
            JSONObject jsonResponse = new JSONObject(responsePOST.body());
            System.out.println("VirusTotal Response: " + jsonResponse.toString(4));

            if (!jsonResponse.has("data") || !jsonResponse.getJSONObject("data").has("id")) {
                throw new Exception("Error scanning file: Response does not contain an ID.");
            }

            String analysisId = jsonResponse.getJSONObject("data").getString("id");
            System.out.println("Analysis ID: " + analysisId);


        } catch (Exception e) {
            throw new Exception("Error scanning file: " + e.getMessage());
        }
        return true;
    }
}
